mps资源：
向mps服务发出一条tcp连接，如果该连接被服务器确认使用，会收到byte（0）。
向指定的端口资源发起连接。
端口资源连接成功后，以mpsname的首字符字节码简单异或处理，两条连接互相转发。

mps用户：
在本地监听一个端口。
当端口收到连接请求，向mps服务发出一条tcp连接。
如果该连接被服务器确认使用，会收到byte（0）。
以mpsname的首字符字节码简单异或处理，两条连接互相转发。

mps服务：
本地监听服务端口。
收到以byte（1）为首的连接，将其后字符当作mpsname存入匹配库的资源类。
收到以byte（2）为首的连接，将其后字符当作mpsname存入匹配库的用户类。
每次添加连接后，判断匹配情况。
如有匹配项目，向双方发送应答 byte（0）后进行数据转发。

mps中继：
向mps服务发出一条tcp连接，如果该连接被服务器确认使用，会收到byte（0）。
在本地匹配库中寻找同名匹配资源。
两条连接互相转发。

mps桥：
向下级mps服务发出一条tcp连接，如果该连接被服务器确认使用，会收到byte（0）。
收到正确的反馈后，向上级mps服务发出一条tcp连接，如果该连接被服务器确认使用，会收到byte（0）。
两条连接互相转发。

TUT的udp丢包验证：
在udp包前面加一个字节，使用了一个有序循环的byte。
在接收端反馈这个字节进行验证。
收到验证后再处理下一个环节，否则进行超时验证重发。
这样既保证了udp包发出有序，又保证了udp的重发验证。
难点在于复用udp的接收线程进行判断后，通过chan传递给了发出的线程。
目前未实现对可能出现重复数据的过滤机制。  
